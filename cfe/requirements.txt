# Requirements automatically generated by pigar.
# https://github.com/Damnever/pigar

# estimation.py: 497
# test/test_estimate_with_missing.py: 389
# test/test_get_loglambdas.py: 18
joblib == 0.11

# engel_curves.py: 14,15
# estimation.py: 5
# test/monte_carlo_estimate_reduced_form.py: 5,623
# test/test_ols_cov.py: 6
matplotlib == 2.1.0

# _core.py: 8
# _utils.py: 6
# demands.py: 11
# df_utils.py: 5
# dgp.py: 6,62
# estimation.py: 7,160,761,763,905,959
# frischian.py: 6
# hicksian.py: 8
# marshallian.py: 8
# result.py: 5
# root_with_precision.py: 17
# test/NOtest_estimate_reduced_form.py: 16,54,302,340
# test/broadcast_binary_op.py: 6
# test/broadcast_binary_op2.py: 6
# test/monte_carlo_estimate_reduced_form.py: 54,92,334,372,672,710,952,990
# test/price_elasticities.py: 14,52
# test/svd_rank1_approximation_with_missing_data_test.py: 5,18
# test/test.py: 5,138,177,267,496
# test/test_artificial_data.py: 7,46
# test/test_df_to_orgtbl.py: 5
# test/test_drop_useless_expenditures.py: 7,18,56
# test/test_elasticities_equal.py: 5
# test/test_estimate_with_missing.py: 5,140,179,270,528
# test/test_get_loglambdas.py: 5,158,274
# test/test_get_stderrs.py: 6,17,55
# test/test_ols_cov.py: 7
# test/test_optimal_index.py: 6,8
# test/test_svd_rank1_approximation_with_missing_data_example.py: 5,8
numpy == 1.13.3

# df_utils.py: 7,179
# dgp.py: 60
# estimation.py: 6,159,282,494,762,983
# result.py: 6
# test/NOtest_estimate_reduced_form.py: 52,135,338,421
# test/broadcast_binary_op.py: 5
# test/broadcast_binary_op2.py: 5
# test/monte_carlo_estimate_reduced_form.py: 90,173,370,453,708,791,988,1071
# test/price_elasticities.py: 50
# test/svd_rank1_approximation_with_missing_data_test.py: 6,17
# test/test.py: 6,136,175,269,441,495
# test/test_artificial_data.py: 5,44
# test/test_df_to_orgtbl.py: 7,179
# test/test_drop_useless_expenditures.py: 54,137
# test/test_estimate_with_missing.py: 8,138,177,269,386,530,702
# test/test_get_loglambdas.py: 6,15,157,276,448
# test/test_get_stderrs.py: 53,136
# test/test_ols_cov.py: 8
# test/test_optimal_index.py: 26
# test/test_svd_rank1_approximation_with_missing_data_example.py: 6,7
pandas == 0.23.3

# _utils.py: 5
# df_utils.py: 6,240
# dgp.py: 5,61
# estimation.py: 906,907
# test/NOtest_estimate_reduced_form.py: 5,15,53,291,301,339
# test/monte_carlo_estimate_reduced_form.py: 43,53,91,323,333,371,661,671,709,941,951,989
# test/price_elasticities.py: 13,51
# test/test.py: 137,176,268
# test/test_artificial_data.py: 6,45
# test/test_df_to_orgtbl.py: 6
# test/test_drop_useless_expenditures.py: 5,17,55
# test/test_elasticities_equal.py: 6,7
# test/test_estimate_with_missing.py: 139,178,529
# test/test_get_loglambdas.py: 275
# test/test_get_stderrs.py: 16,54
scipy == 0.19.1

# df_utils.py: 239,384
# dgp.py: 7
# estimation.py: 418,982
# result.py: 8,519
# test/NOtest_estimate_reduced_form.py: 17,303
# test/broadcast_binary_op.py: 39
# test/broadcast_binary_op2.py: 39
# test/monte_carlo_estimate_reduced_form.py: 55,335,673,953
# test/price_elasticities.py: 15
# test/test.py: 139
# test/test_artificial_data.py: 8
# test/test_drop_useless_expenditures.py: 19
# test/test_estimate_with_missing.py: 141
# test/test_get_stderrs.py: 18
# test/test_optimal_index.py: 25
xarray == 0.10.7
